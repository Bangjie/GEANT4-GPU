.\" doc/topcc.1.  Generated from topcc.1.in by configure.
.TH TOPCC 1
.SH NAME
topcc \- Task Oriented Parallel C (TOP-C) compiler
topc++ \- Task Oriented Parallel C (TOP-C) compiler for C++
.SH SYNOPSIS
.B topcc
.RB [ \-\-mpi\ \| | \|\ \-\-seq\ \| | \|\ \-\-pthread "\|] \
[\|" \-\-efence "\|]"
.I CPARAMS
\&...
.br
.B topcc
.RB "[\|" \-\-help\ \| | \|\ \-\-version "\|]
.sp
.B topc++
\&...
.I (as for topcc)
.sp
.br
.B topc\-config
.RB     [\-\-prefix[=DIR]]
.RB     [\-\-exec-prefix[=DIR]]
.RB     [\-\-with-uninstalled-topc]
.RB     [\-\-libs]
.RB     [\-\-cflags]
.RB     [\-\-help]
.RB     [\-\-version]
.sp
.B #include <topc.h>
.SH DESCRIPTION
TOP-C is a programming model for
.I easily
writing parallel applications.
The
.I topcc
shell script is is used to invoke gcc with the correct include files
and libraries for TOP-C.
The
.I topc++
shell script is is used to invoke g++ with the correct include files
and libraries for TOP-C.
.I CPARAMS
are the same parameters that would be passed to gcc or g++.
.I topc\-config
determines the compiler and linker flags, and can be used when
.I topcc
is inconvenient.  For example,
.br
.B topcc --mpi myfile.c
.br
is more or less equivalent to
.br
.B gcc `topc-config --mpi --cflags` myfile.c
.br
.B \ \  `topc-config --mpi --libs`
.br
.I topcc
produces an executable from a source or object file, or an object file
from a source file.  The source file must contain "#include <topc.h>".
Documentation of the TOP-C programmer's model for writing parallel
programs is contained in the directory /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/.
Depending on what was installed, the documentation exists in some
or all of .info, .dvi, .ps, .html and .txt format.
.SH OPTIONS
.TP
.B \-\-mpi
Link object file using
.I libtopc-mpi.a
library.  This produces a distributed memory application running
on top of an implementation of MPI (Message Passing Interface) included
with the distribution.  The application reads a
.I procgroup
file from the current directory to determine the remote host and the
path of the remote application.  See the section below for
the format of the procgroup file.
Alternatively the command line used to invoke the application can include
.B \-\-TOPC_procgroup
.I file
where
.I file
is a full path for the desired procgroup file.
If the remote host has a different
architecture, the application programmer may need to use htonl,
nltoh, xdr (eXternal Data Representation), or other techniques
to maintain data independence for heterogeneous architectures.
.TP
.B \-\-pthread
.TP
Link object file using
.I libtopc-pthread.a
library.  This produces an SMP application (Symmetric MultiProcessing
shared memory application) running on top of pthreads (POSIX threads).
.B \-\-seq
Link object file using
.I libtopc-seq.a
library.  This produces a sequential (non-parallel) application running
in a single process.  It is recommended to use this library in the
early stages of application development, so that a symbolic debugger
(gdb or alternative) can be used easily.  
.TP
.B \-\-efence
Link executable using
.I \-lefence
for memory management debugging (malloc, free, new, etc.).
If your system doesn't have
.I \-lefence
or you prefer a different library, edit the line
.I LIBMALLOC=
in the
.I topcc
or
.I topc++
script.
.TP
.B \-\-help
List command line options.
.B \-\-version
List version of topcc.
.SH PROCGROUP
The
.I
procgroup
.:P
file is useful only with the command line option
.I \-\-mpi
.  This is the same format that was used by P4, one predecessor of MPI.
The file must contain a line:
.LP
local 0
.LP
for the master process.  It must also contain a line for each slave
process of the form:
.LP
hostname 1 full_pathname
.LP
where
.I hostname
is the remote host.  The value 'localhost' is recommended for debugging.
The
.I full_pathname
is the pathname of a binary on the remote host.  In a shared file
system, this will typically be the same as the pathname of the
local binary, but it can be a different binary, allowing for
heterogeneous computing.  The environment variable
.I RSH
(default 'rsh') is used to invoke the remote host.  It is sometimes
useful to modify this environment variable to get around firewalls.
.SH EXAMPLES
See /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/examples/.
.SH AUTHOR
Gene Cooperman <gene@ccs.neu.edu>
.br
See the manual and README for others who ported and helped develop
various parts.
.SH ENVIRONMENT
.TP
.B RSH
Used with \-\-mpi.  By default,
.I rsh
is used to invoke application on remote host.  If this is set, its value
determines a substitute command, such as
.I ssh.
.TE
.LP
See gcc and g++ for more environment variables.
.SH FILES
''' .B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/
.B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/topc.dvi
.br
.B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/topc.info
.TP
.B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/html/topc_toc.html
Manual for the TOP-C programming model.
''' .TP
''' .B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/topc.dvi
''' .B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/topc.info
''' .B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/doc/html/topc_toc.html
''' Description of TOP-C programming model.
.TP
.B /home/kason/school/4zp6/repo/GEANT4-GPU/topc-2.5.2/examples/
Example TOP-C programs.
.TP
.B procgroup
Used with \-\-mpi to determine remote hosts and path of remote application.
.TP
.B /tmp/mpinu-rsh.*
Used with \-\-mpi.  If application fails to invoke remote hosts, this
file is left for debugging.
.B /tmp/procgroup.*
Used with \-\-mpi.  If application fails to invoke remote hosts, this
file may be left for debugging.
.SH SEE ALSO
.TP
gcc(1), htonl(3), nltoh(3), rsh(1), ssh(1), topc-config(1), xdr(3),
and ANSI/IEEE Std 754-1985 floating point standard.
