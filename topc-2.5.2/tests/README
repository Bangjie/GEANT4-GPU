Right now there is no formal test suit except for "make check" from
top level.  Thses are some of the areas that I try to cover
in my informal test suite.

configure with (gcc):  "CFLAGS=-Wall -W -pedantic"
  and recompile TOP-C.

Some test cases to check are:
  sequential vs. mpi vs. pthread

Should do memory checks with valgrind:
  ADD valgrind --tool=memcheck --leak-check=yes  TO bin/Makefile:checkit TARGET

Should verify --TOPC-aggregated-tasks
  (also include some large tasks larger than AGGREG_TASKS_SIZE)
  Note par8queens-raw and various others use trivial parallelism,
	and can be tested with --TOPC-aggregated-tasks .
  For example:  env TOPC_OPTS=--TOPC-aggregated-tasks=2 make check
     [ although it doesn't handle actions besides NO_ACTION ]
     parsimple includes large tasks

Should verify with at least 100 slaves (behavior different as slaves
  start late, never start, or die later)
  Should add mechanism to cause slaves to randomly die, for testing.

Should verify when slaves die:  env CFLAGS=-DSLAVES_DIE=5   (5 secs or less)
  Should run variants of applications that last longer.

Should verify with two calls to TOPC_master_slave in program
  parsimple.c and gauss-elim-*.c do this.

Should verify --TOPC-safety for different levels
  env TOPC_OPTS=--TOPC-safety=10 make check
  (and so on for safety level 16, 18, etc.)

Should verify that it works with C++.
  ( cd bin; make TOPCC=./topc++ checkall | grep TEST )

Should verify with other compilers
  Solaris:  env CC=cc CXX=CC ./configure
  AIX:      env CC=xlc CXX=xlC ./configure

Should verify that it works with other MPIs

Verify that TOP-C avoids namespace clash with applications:
  The only symbols exported by a TOP-C library should be:
    TOPC_*, COMM_*, MEM_*, MPI_*, MPINU_*, and
    NO_ACTION, UPDATE, REDO, and CONTINUATION and NOTASK. 
  The next command tests this:
nm ../lib/*.a | grep ' [DT] ' | grep -v TOPC_ | grep -v COMM_ | grep -v MEM_ \
  | grep -v MPI_ | grep -v MPINU_ \
  | grep -v NO_ACTION | grep -v UPDATE | grep -v REDO | grep -v CONTINUATION \
  | grep -v NOTASK \
  | sort | uniq

Check the static local variables for routines executed on a slave.
These cannot work in threads, since all threads share the variables.

spell check on documentation 

Check utils directory and CHANGES to see if information is up to date.
