Version 2.5:

Fixing various bugs -- especially some that affect the use of TOP-C
 with around 100 slaves or more; or the use with other MPIs besides
 the built-in MPI subsect, mpinu.

In TOP-C 2.5, a major change was to now handle dead sockets, and ensure
that the current task on that slave was sent to a new slave.

TOP-C 2.5 has some bug fixes that could affect distributed memory
operation on clusters with on the order of 100 or more slave processes.

The environment variable TOPC_OPTS and the initialization file ~/.topcrc
are also now available (format:  --TOPC-xxx ...).

TOP-C 2.4 and earlier used rsh by default (instead of ssh) to create
the remote slaves.  ssh is now the default.  TOP-C 2.4 tested the
environment variable RSH, and if it was set, TOP-C would use the
value of RSH instead of "rsh".
Version 2.5 now tests the environment variable SSH, and if it is set,
TOP-C uses the value of SSH instead of "ssh".
If a site continues to use "rsh", one can:  setenv SSH "rsh"
  or for sh/bash:  SSH=rsh; export SSH

All of the example programs (examples subdirectory) now work both
as C and C++ programs.  They can be compiled with either topcc or topc++ .

TOP-C now handles aggregated task inputs.  This is important for
finer grain parallelism with shorter messages, when the latency
of sending a network message is comparable or greater than the task execution
time.  To aggregate 5 tasks at a time, try it with:  --TOPC-task-aggregation=5
This feature is currently
restricted to trivial parallelism (no TOP-C action except NO_ACTION).

See the utils directory for code that will be polished and documented
    in a later version of TOP-C:
  a broadcast utility inside TOP-C:
  ssh-killall: EXAMPLE:  ssh-killall a.out   (Use procgroup of current dir
  	to kill all a.out processes on slave processors)
  a C++ interface for TOP-C:
--TOPC-stats command line option added to display statistics (run time,
  CPU information, etc.) at beginning and end of run.
--TOPC-verbose no longer displays stats at end, but --TOPC-verbose
	is now enabled by default.

===
COMING (not yet done):
  See utils directory for features that are planned for integration
into TOP-C.

Should guarantee continuation of TOP-C even in unlikely event
that a slave dies at the end, while waiting for TOP-C to complete.

Should provide simple checkpointing.
