#! /bin/sh
# @configure_input@

CXX='@CXX@'
MPICXX="@MPICXX@"
# Add -g for symbolic debugging
CXXFLAGS=
LIBMALLOC=@LIBEFENCE@

prefix=@prefix@
exec_prefix=@exec_prefix@
TOPC_CONFIG_DIR=@bindir@

if test -x $TOPC_CONFIG_DIR/topc-config; then
  TOPC_CONFIG=$TOPC_CONFIG_DIR/topc-config
else
  TOPC_CONFIG=@PWD@/bin/topc-config
fi

if [ $# -eq 0 -o "$1" = "-h" -o "$1" = "--help" ]; then
  cat <<EOF
Usage:  topc++  [ --mpi | --pthread | --seq ] [ --efence ] CPARAMS ...
        topc++ --version
  --efence useful for debugging memory mgmt; no effect if -lefence not on sys
  This is a script, adding TOP-C library and include files to:
        @CXX@ CPARAMS ...
  where CPARAMS are parameters for the @CXX@ command.
  The source file being compiled must contain:  #include <topc.h>
  If --mpi is used, the current directory must contain procgroup
    or else:  ./topc++ --mpi myapp.c
              ./a.out --TOPC_procgroup=MYDIR/procgroup
Example:  topc++ --mpi -o myapp myapp.cc
          ./myapp
EOF
  exit 1
fi;

# Also accept -seq|-mpi|-pthread, but only if it's first argument.
case $1 in
  -seq | -mpi | -pthread)
    flags="-$@"
    ;;
  *)
    flags="$@"
    ;;
esac

# if: cc -c ..., don't need libs for linking.
for flag in $flags; do
  case $flag in
    --seq)
      cflags="`$TOPC_CONFIG --seq --cflags`"
      libs="`$TOPC_CONFIG --seq --libs`"
      ;;
    --mpi)
      cflags="`$TOPC_CONFIG --mpi --cflags`"
      libs="`$TOPC_CONFIG --mpi --libs`"
      CXX="$MPICXX"
      ;;
    --pthread)
      if test "@HAVE_PTHREAD@" != "yes"; then
        echo "*** No --pthread; This was configured with --enable-pthread=no"
        echo "***         or else libpthread was not found during configure."
        exit 1
      fi
      cflags="`$TOPC_CONFIG --pthread --cflags`"
      libs="`$TOPC_CONFIG --pthread --libs`"
      ;;
    --version)
     echo "( TOP-C/C++ version `$TOPC_CONFIG --version`, using $CXX $CXXFLAGS)"
      echo $CXX version:
      args="$args $flag"
      ;;
    --efence)
      efence=$LIBMALLOC
      ;;
    -c)
      echo_libs=no
      efence=
      args="$args $flag"
      ;;
    *)
      args="$args $flag"
      ;;
  esac
done

if test "x$libs" = "x"; then
  cflags="`$TOPC_CONFIG --mpi --cflags`"
  libs="`$TOPC_CONFIG --mpi --libs`"
  CXX="$MPICXX"
fi

if test x$echo_libs = xno; then
  libs=
fi

$CXX $CXXFLAGS $cflags $args $libs $efence
