THIS IS STILL A DOCUMENT IN PROGRESS.

Emulation of parallel computation in a sequential process for ease of
  debugging:  by a single command line switch (`topcc --seq').

Common API (and ABI) for distributed memory (sockets), shared memory (posix
  threads) and sequential computation.

TOP-C continues and resubmits task to another slave if a slave dies.
This does not kill the computation.

A subset of MPI (mpinu) is provided for use of TOP-C with sockets, and
  TOP-C retains the ability to use other MPI implementations.

Extensibility:  ease of writing new communication layer based on
  existing models: src/comm-*.c

Ease of checkpointing, since the latest version of all state (including
  shared data) is always up to date on master process.

Receive thread on slave in mpi mode (to allow overlap of computation
and communication).  This currently is used only on the slave.
This overlap occurs during UPDATE.
  (Some dialects of MPI already do this, but not MPINU (built into TOP-C).)

Many usability features:  command line option, topcc (wrapper for native
  compiler), topc-config, ...

...
